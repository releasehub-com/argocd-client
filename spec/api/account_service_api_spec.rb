=begin
#Consolidate Services

#Description of all APIs

OpenAPI spec version: version not set

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.4.32-SNAPSHOT

=end

require 'spec_helper'
require 'json'

# Unit tests for ArgoCD::AccountServiceApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'AccountServiceApi' do
  before do
    # run before each test
    @instance = ArgoCD::AccountServiceApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of AccountServiceApi' do
    it 'should create an instance of AccountServiceApi' do
      expect(@instance).to be_instance_of(ArgoCD::AccountServiceApi)
    end
  end

  # unit tests for account_service_can_i
  # CanI checks if the current account has permission to perform an action
  # @param resource 
  # @param action 
  # @param subresource 
  # @param [Hash] opts the optional parameters
  # @return [AccountCanIResponse]
  describe 'account_service_can_i test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for account_service_create_token
  # CreateToken creates a token
  # @param name 
  # @param body 
  # @param [Hash] opts the optional parameters
  # @return [AccountCreateTokenResponse]
  describe 'account_service_create_token test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for account_service_delete_token
  # DeleteToken deletes a token
  # @param name 
  # @param id 
  # @param [Hash] opts the optional parameters
  # @return [AccountEmptyResponse]
  describe 'account_service_delete_token test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for account_service_get_account
  # GetAccount returns an account
  # @param name 
  # @param [Hash] opts the optional parameters
  # @return [AccountAccount]
  describe 'account_service_get_account test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for account_service_list_accounts
  # ListAccounts returns the list of accounts
  # @param [Hash] opts the optional parameters
  # @return [AccountAccountsList]
  describe 'account_service_list_accounts test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for account_service_update_password
  # UpdatePassword updates an account&#39;s password to a new value
  # @param body 
  # @param [Hash] opts the optional parameters
  # @return [AccountUpdatePasswordResponse]
  describe 'account_service_update_password test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
