=begin
#Consolidate Services

#Description of all APIs

OpenAPI spec version: version not set

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.4.32-SNAPSHOT

=end

require 'spec_helper'
require 'json'

# Unit tests for ArgoCD::ProjectServiceApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'ProjectServiceApi' do
  before do
    # run before each test
    @instance = ArgoCD::ProjectServiceApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of ProjectServiceApi' do
    it 'should create an instance of ProjectServiceApi' do
      expect(@instance).to be_instance_of(ArgoCD::ProjectServiceApi)
    end
  end

  # unit tests for project_service_create
  # Create a new project
  # @param body 
  # @param [Hash] opts the optional parameters
  # @return [V1alpha1AppProject]
  describe 'project_service_create test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for project_service_create_token
  # Create a new project token
  # @param project 
  # @param role 
  # @param body 
  # @param [Hash] opts the optional parameters
  # @return [ProjectProjectTokenResponse]
  describe 'project_service_create_token test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for project_service_delete
  # Delete deletes a project
  # @param name 
  # @param [Hash] opts the optional parameters
  # @return [ProjectEmptyResponse]
  describe 'project_service_delete test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for project_service_delete_token
  # Delete a new project token
  # @param project 
  # @param role 
  # @param iat 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :id 
  # @return [ProjectEmptyResponse]
  describe 'project_service_delete_token test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for project_service_get
  # Get returns a project by name
  # @param name 
  # @param [Hash] opts the optional parameters
  # @return [V1alpha1AppProject]
  describe 'project_service_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for project_service_get_detailed_project
  # GetDetailedProject returns a project that include project, global project and scoped resources by name
  # @param name 
  # @param [Hash] opts the optional parameters
  # @return [ProjectDetailedProjectsResponse]
  describe 'project_service_get_detailed_project test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for project_service_get_global_projects
  # Get returns a virtual project by name
  # @param name 
  # @param [Hash] opts the optional parameters
  # @return [ProjectGlobalProjectsResponse]
  describe 'project_service_get_global_projects test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for project_service_get_sync_windows_state
  # GetSchedulesState returns true if there are any active sync syncWindows
  # @param name 
  # @param [Hash] opts the optional parameters
  # @return [ProjectSyncWindowsResponse]
  describe 'project_service_get_sync_windows_state test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for project_service_list
  # List returns list of projects
  # @param [Hash] opts the optional parameters
  # @option opts [String] :name 
  # @return [V1alpha1AppProjectList]
  describe 'project_service_list test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for project_service_list_events
  # ListEvents returns a list of project events
  # @param name 
  # @param [Hash] opts the optional parameters
  # @return [V1EventList]
  describe 'project_service_list_events test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for project_service_list_links
  # ListLinks returns all deep links for the particular project
  # @param name 
  # @param [Hash] opts the optional parameters
  # @return [ApplicationLinksResponse]
  describe 'project_service_list_links test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for project_service_update
  # Update updates a project
  # @param project_metadata_name Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names +optional
  # @param body 
  # @param [Hash] opts the optional parameters
  # @return [V1alpha1AppProject]
  describe 'project_service_update test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
