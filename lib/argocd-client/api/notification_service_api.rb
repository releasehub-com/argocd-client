=begin
#Consolidate Services

#Description of all APIs

OpenAPI spec version: version not set

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.4.32-SNAPSHOT

=end

require 'uri'

module ArgoCD
  class NotificationServiceApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end
    # List returns list of services
    # @param [Hash] opts the optional parameters
    # @return [NotificationServiceList]
    def notification_service_list_services(opts = {})
      data, _status_code, _headers = notification_service_list_services_with_http_info(opts)
      data
    end

    # List returns list of services
    # @param [Hash] opts the optional parameters
    # @return [Array<(NotificationServiceList, Fixnum, Hash)>] NotificationServiceList data, response status code and response headers
    def notification_service_list_services_with_http_info(opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: NotificationServiceApi.notification_service_list_services ...'
      end
      # resource path
      local_var_path = '/api/v1/notifications/services'

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['argocd_auth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'NotificationServiceList')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: NotificationServiceApi#notification_service_list_services\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # List returns list of templates
    # @param [Hash] opts the optional parameters
    # @return [NotificationTemplateList]
    def notification_service_list_templates(opts = {})
      data, _status_code, _headers = notification_service_list_templates_with_http_info(opts)
      data
    end

    # List returns list of templates
    # @param [Hash] opts the optional parameters
    # @return [Array<(NotificationTemplateList, Fixnum, Hash)>] NotificationTemplateList data, response status code and response headers
    def notification_service_list_templates_with_http_info(opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: NotificationServiceApi.notification_service_list_templates ...'
      end
      # resource path
      local_var_path = '/api/v1/notifications/templates'

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['argocd_auth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'NotificationTemplateList')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: NotificationServiceApi#notification_service_list_templates\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # List returns list of triggers
    # @param [Hash] opts the optional parameters
    # @return [NotificationTriggerList]
    def notification_service_list_triggers(opts = {})
      data, _status_code, _headers = notification_service_list_triggers_with_http_info(opts)
      data
    end

    # List returns list of triggers
    # @param [Hash] opts the optional parameters
    # @return [Array<(NotificationTriggerList, Fixnum, Hash)>] NotificationTriggerList data, response status code and response headers
    def notification_service_list_triggers_with_http_info(opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: NotificationServiceApi.notification_service_list_triggers ...'
      end
      # resource path
      local_var_path = '/api/v1/notifications/triggers'

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['argocd_auth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'NotificationTriggerList')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: NotificationServiceApi#notification_service_list_triggers\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end
